/**
 * modelFactory makes working with RESTful APIs in AngularJS easy
 * @version v0.0.6 - 2014-11-25
 * @link https://github.com/phxdatasec/model-factory
 * @author Austin McDaniel <amcdaniel2@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
var module=angular.module("modelFactory",[]),forEach=angular.forEach,extend=angular.extend,copy=angular.copy,instanceKeywords=["$$array","$save","$destroy","$pending","$revert","$diff","$extend"],staticKeywords=["actions","instance","list","defaults","pk","stripTrailingSlashes","map"],extendDeep=function a(b){return forEach(arguments,function(c){c!==b&&forEach(c,function(c,d){-1===instanceKeywords.indexOf(d)&&(b[d]&&angular.isObject(b[d])?a(b[d],c):angular.isFunction(b[d])||(b[d]=c))})}),b};module.factory("$modelFactory",function(a,b,c,d){function e(c,e){function g(a){a.forEach(function(b,c){if(null!==b&&void 0!==b){var d=b.constructor===h?b:new h(b);d.$$array=a,a[c]=d}});var b=a.push;return a.push=function(c){c.constructor===h&&(c.$$array=a),b.apply(a,arguments)},e.list&&extend(a,e.list),a}function h(a){var b,c=this;void 0===a&&(a={}),forEach(e.defaults,function(b,c){void 0===a[c]&&(a[c]="function"==typeof b?b(a):b)}),forEach(e.map,function(b,c){typeof b===h||typeof b===g?a[c]=new b(a[c]):"function"==typeof b?a[c]=b(a[c],a):(a[c]=a[c],delete a[c])}),forEach(e.actions,function(a,b){"$"===b[0]&&(c[b]=function(){return h.$buildRequest(b,a,c)})}),extend(c,a),extend(c,copy(e.instance)),c.$save=function(){var a=h[c[e.pk]?"update":"post"](c);return c.$pending=!0,a.then(function(a){c.$pending=!1,extendDeep(c,a)},function(){c.$pending=!1}),a},c.$destroy=function(){var a=h.delete(c);return c.$pending=!0,a.then(function(){c.$pending=!1;var a=c.$$array;a&&a.splice(a.indexOf(c),1)},function(){c.$pending=!1}),a},c.$diff=function(){return DeepDiff.deep(b,c,function(a,b){return"$"===b[0]})},c.$revert=function(){return c.$extend(b)},c.$extend=function(a){return extendDeep(c,a),c},b=copy(a)}var i={};return e=extendDeep({},copy(f),e),h.$cache=d(c),forEach(e.actions,function(a,b){"base"!==b&&"$"!==b[0]&&(h[b]=function(){var c=Array.prototype.slice.call(arguments);return h.$buildRequest.apply(this,[b,a].concat(c))})}),h.$buildRequest=function(a,b,d,f){var g=copy(e.actions.base);extend(g,copy(b)),g.cache===!0&&(g.cache=h.$cache);var i="";if(g.override)i=g.url;else if(i=c,g.url&&(i+="/"+g.url),("get"===a||"post"===a||"update"===a||"delete"===a)&&(i+="/{"+e.pk+"}"),"GET"===g.method&&(angular.isString(d)||angular.isNumber("number"))){var j={};j[e.pk]=d,d=j,f&&(d.param=f,i+="{?param*}")}else"GET"===g.method&&angular.isObject(d)&&(d={param:d},i+="{?param*}");return g.url=h.$url(i,d),g.data=d,h.$call(g)},h.$call=function(c){var d=c.method+":"+c.url;if(i[d])return i[d];var e=b.defer();return i[d]=e.promise,c.data=copy(c.data),c.beforeRequest&&c.beforeRequest(c),c.data=h.$strip(c.data),a(c).success(function(a){c.afterRequest&&c.afterRequest(a),c.invalidateCache&&h.$cache.removeAll(),e.resolve(c.wrap?c.isArray?new h.List(a):new h(a):a),i[d]=void 0}).error(function(a){i[d]=void 0,e.reject(a)}),e.promise},h.$url=function(a,b){var d=new UriTemplate(a||c).fillFromObject(b||{});return e.stripTrailingSlashes&&(d=d.replace(/\/+$/,"")||"/"),d},h.$strip=function(a){return a&&"object"==typeof a&&forEach(a,function(b,c){instanceKeywords.indexOf(c)>-1&&delete a[c]}),a},forEach(e,function(a,b){-1===staticKeywords.indexOf(b)&&(h[b]=a)}),h.List=g,h}var f={pk:"id",stripTrailingSlashes:!0,defaults:{},map:{},actions:{base:{wrap:!0,beforeRequest:void 0,afterRequest:void 0,cache:!1},get:{method:"GET"},query:{method:"GET",isArray:!0},post:{method:"POST",invalidateCache:!0},update:{method:"PUT",invalidateCache:!0},"delete":{method:"DELETE",invalidateCache:!0}},instance:{},list:{}};return e});